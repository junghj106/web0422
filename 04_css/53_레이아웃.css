@charset "utf-8";

/* 선택자의 종류
   1. 요소(태그, 타입)
   2. 그룹: ,
   3. 클래스 선택자: .이름
*/
/* 레이아웃 유형1의 전체 크기 */
.container1{
    width: 1200px;
    margin:0 auto; /* 콘텐츠 가로 중앙 배치 */
}
/* 레이아웃 유형1 - */
/* div1~4는 레이아웃 유형1의 각 박스 크기와 배경색 */
.div1{
    background:aqua;
    height: 100px;
}
.div2{
    background:beige;
    height: 300px;
}
.div3{
    background:chocolate;
    height: 200px;
}
.div4{
    background:darkcyan;
    height: 100px;
}
/* 레이아웃 유형2 - 가로 */
/* 
   레이아웃(layout)
   1. floationg
   2. flexible
   3. grid layout 
   4. positioning
   5. 블록레벨요소 속성을 인라인요소 속성으로 바꾼다.
*/
/* 5번 display(표시방식)
   display: block; -> 인라인요소 속성을 블록레벨요소 속성으로 바꿔준다.
   display: inline; -> 블록레벨요소 속성을 인라인요소 속성으로 바꿔준다.
   display: inline-block; -> 인라인요소+블록레벨 두 속성을 모두 갖는다.
   display: none; -> 화면에서 요소를 제거

   블록레벨요소
    display: block;
    - 세로 배치(위에서 아래, 줄바꿈)
    - 가로는 100%, 세로는 내용 크기
    - 가로/세로 크기가 지정된다.

   인라인요소
    display: inline;
     - 가로 배치(왼쪽에서 오른쪽, 줄바꿈X)
     - 가로/세로는 내용.크기
     - 가로/세로 크기가 지정되지 않습니다.
    display: inline-block;
     - 가로/세로 크기가 지정 된다.
 */

/* div5~7는 레이아웃 유형2의 각 박스 크기와 배경색 */
/* 카멜(낙타) 표기법: 소문자,두번째 단어 부터 단어의 첫글자는 대문자 */
.boxSize {
    width: 400px;/* w+tab */
    height: 200px;/*  */
}
/* 레이아웃 유형2: inline-block */
.container2{
    display:inline-block;
    width: 400px;
    height: 200px;
}
.div5{
    background:forestgreen;
}
.div6{
    background:hotpink;
}
.div7{
    background:khaki;
}
/* 레이아웃 유형2: floating(과거) */
/* float: left; -> 왼쪽을 기준으로 가로 배치 */
/* float: right -> 오른쪽을 기준으로 가로 배치*/
.container3{
    float: left;  
}
/* 레이아웃 유형2: flexible */
.df{
    display: flex;
}
/* 레이아웃 유형3: 가로+세로 */
.header {
    width: 200px;
    height: 700px;
    background: indianred;
}
.container {
    width: 1000px;
    height: 700px;
    background: khaki;
}
.slide{
    background: grey;
    height: 400px;
}
.contents{
    background: aquamarine;
    height: 200px;
}
.footer{
    background: magenta;
    height: 100px;
}

/* 사용한 클래스명 */
/* .container1~3
   .df -> display flex 
   .boxSize 
   .div1~7
   .header
   .contents
   .section
   .footer 
   */
   /* 선택자
      1. 요소(태그,타입)
      2. 클래스
      3. 하위(자손:자식+손자): 같은 이름을 중복해서 사용할 수 있다. 부모요소 자손요소
         예> .container4 .section
         예> .container4 .notice 
       */
/* 레이아웃 유형4: 가로+세로 */
.wrap4{
    width: 1200px;
    margin: 0 auto;
}
.container4{
    display: flex;
    background: yellow;
}
.right_wrap{
    width: 1000px;
}
.header{
    width: 200px;
    height: 850px;
    background: red;
}
.silde{
    height: 400px;
    background: grey;
}
.banner{
    height: 200px;
    background: magenta;
}
.notice{
    height: 250px;
    background: aquamarine;    
}
.footer{
    height: 100px;
    background: green;
}

